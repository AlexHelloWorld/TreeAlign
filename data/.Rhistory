# get expression and corresponding cnv
patient_id <- "SPECTRUM-OV-022"
output <- readRDS("output.rdata")
seu <- output$seu
seu$clonealign <- output$clonealign
seu <- FindVariableFeatures(seu)
seu <- ScaleData(seu)
seu <- RunPCA(seu)
seu <- RunUMAP(seu, dims = 1:20)
whichMax <- function(x){
if(max(x) < 0.8){
return("unassigned")
}else{
as.character(which(x == max(x)))
}
}
# validate clonealign improve
clonealign_freq <- read.csv(paste0(patient_id, "_clonealign_improve_clone_freq.csv"), stringsAsFactors = FALSE, row.names = 1)
clonealign_assignment <- apply(clonealign_freq, 1, whichMax)
seu$clonealign_pyro <- clonealign_assignment
table(seu$clonealign, seu$clonealign_improve)
table(seu$clonealign, seu$clonealign_pyro)
(2279 + 329 + 706 + 2148)/length(seu$clonealign)
fit <- readRDS("data/fit.rdata")
fit <- readRDS("fit.rdata")
fit$ml_params$alpha
fit$ml_params$clone_probs
# validate clonealign improve
clonealign_freq <- read.csv(paste0(patient_id, "_clonealign_improve_clone_freq.csv"), stringsAsFactors = FALSE, row.names = 1)
clonealign_assignment <- apply(clonealign_freq, 1, whichMax)
seu$clonealign_pyro <- clonealign_assignment
table(seu$clonealign, seu$clonealign_pyro)
(2181 + 307 + 691 + 2180)/length(seu$clonealign)
difftime(t1, t2)
t1
